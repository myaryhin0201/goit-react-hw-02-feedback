{"version":3,"sources":["components/Feedback/FeedbackOptions/styles.jsx","components/Feedback/FeedbackOptions/index.jsx","components/Feedback/Section/index.jsx","components/Feedback/Statistics/styles.jsx","components/Feedback/Statistics/index.jsx","components/Feedback/Notification/index.jsx","components/Feedback/index.jsx","components/Container/index.jsx","components/Layouts/index.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","button","width","padding","border","fontSize","borderRadius","backgroundColor","outline","textTransform","good","bad","neutral","FeedbackOptions__list","display","justifyContent","FeedbackOptions__item","marginRight","FeedbackOptions","options","onLeaveFeedback","classes","className","map","option","type","onClick","Feedback","textAlign","marginBottom","paddingTop","Statistics","LeaveFeedback","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","Section","title","children","classname","defaultProps","statistics__list","margin","statistics__list__item","fontWeight","total","positivePercentage","defaultTypes","Notification","message","useState","feedback","setFeedback","countTotalFeedback","Object","values","reduce","acc","value","keys","event","targetTextContent","target","textContent","prevState","blur","Math","round","Container","maxWidth","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f56f635d.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  button: {\n    width: '150px',\n    padding: '10px 0',\n    border: '0',\n    fontSize: '20px',\n    borderRadius: '10px',\n    '&:hover, &:focus': {\n      backgroundColor: 'aqua',\n      outline: 'none',\n    },\n    '&::first-letter': {\n      textTransform: 'uppercase',\n    },\n  },\n  good: {\n    backgroundColor: 'lawngreen',\n  },\n  bad: {\n    backgroundColor: 'red',\n  },\n  neutral: {\n    backgroundColor: 'orange',\n  },\n  FeedbackOptions__list: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  FeedbackOptions__item: {\n    '&:not(:last-child)': {\n      marginRight: '10px',\n    },\n  },\n});\nexport default useStyles;\n","import PropTypes from 'prop-types';\nimport useStyles from './styles';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const classes = useStyles();\n  return (\n    <ul className={classes.FeedbackOptions__list}>\n      {options.map(option => (\n        <li className={classes.FeedbackOptions__item} key={option}>\n          <button\n            type=\"button\"\n            className={`${classes.button} ${classes[option]}`}\n            onClick={onLeaveFeedback}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Feedback: {\n    textAlign: 'center',\n    marginBottom: '20px',\n    paddingTop: '20px',\n  },\n  Statistics: {\n    textAlign: 'center',\n  },\n  LeaveFeedback: {\n    backgroundImage:\n      'linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n  },\n});\n\nconst Section = ({ title, children, classname }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes[classname]}>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\nSection.defaultProps = {\n  title: '',\n  classname: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  classname: PropTypes.string,\n};\n\nexport default Section;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  statistics__list: {\n    width: '450px',\n    margin: '0 auto',\n    textAlign: 'left',\n    backgroundColor: 'orchid',\n    padding: '10px 10px',\n    borderRadius: '10px',\n  },\n  statistics__list__item: {\n    fontSize: '20px',\n    fontWeight: 'bold',\n    '&:not(:last-child)': {\n      marginBottom: '5px',\n    },\n  },\n});\n\nexport default useStyles;\n","import PropTypes from 'prop-types';\nimport useStyles from './styles';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const classes = useStyles();\n  return (\n    <ul className={classes.statistics__list}>\n      <li className={classes.statistics__list__item}>Good: {good}</li>\n      <li className={classes.statistics__list__item}>Neutral: {neutral}</li>\n      <li className={classes.statistics__list__item}>Bad: {bad}</li>\n      <li className={classes.statistics__list__item}>Total: {total()}</li>\n      <li className={classes.statistics__list__item}>\n        Positive feedback: {positivePercentage()}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.defaultTypes = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Notification: {\n    fontSize: '50px',\n    fontWeight: 'bold',\n    backgroundImage:\n      'linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n  },\n});\n\nconst Notification = ({ message }) => {\n  const classes = useStyles();\n  return <span className={classes.Notification}>{message}</span>;\n};\nNotification.defaultProps = {\n  message: '',\n};\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import { useState } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\n\nconst Feedback = () => {\n  const [feedback, setFeedback] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const { good, neutral, bad } = feedback;\n\n  const handleLeaveFeedback = event => {\n    const targetTextContent = event.target.textContent;\n    setFeedback(prevState => ({\n      ...prevState,\n      [targetTextContent]: feedback[targetTextContent] + 1,\n    }));\n    event.target.blur();\n  };\n  const countTotalFeedback = () => {\n    const values = Object.values(feedback);\n    return values.reduce((acc, value) => acc + value, 0);\n  };\n  const countPositiveFeedbackPercentage = () =>\n    Math.round(((100 * good) / countTotalFeedback()) * 10) / 10;\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\" classname=\"Feedback\">\n        <FeedbackOptions\n          options={Object.keys(feedback)}\n          onLeaveFeedback={handleLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\" classname=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default Feedback;\n\n// на классе\n\n// import { Component } from 'react';\n// import PropTypes from 'prop-types';\n\n// import FeedbackOptions from './FeedbackOptions/Feedbackoptions';\n// import Section from './Section/Section';\n// import Statistics from './Statistics/Statistics';\n\n// import './Feedback.scss';\n\n// class Feedback extends Component {\n//   static defaultProps = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//     total: 0,\n//     positivePercentage: 0,\n//     value: 0,\n//   };\n//   static propTypes = {\n//     good: PropTypes.number,\n//     neutral: PropTypes.number,\n//     bad: PropTypes.number,\n//     total: PropTypes.number,\n//     positivePercentage: PropTypes.number,\n//     value: PropTypes.number,\n//   };\n//   state = {\n//     good: this.props.good,\n//     neutral: this.props.neutral,\n//     bad: this.props.bad,\n//     total: this.props.total,\n//     positivePercentage: this.props.positivePercentage,\n//     value: this.props.positivePercentage,\n//   };\n//   goodFeedback = () => {\n//     this.setState(prevState => ({\n//       good: prevState.good + 1,\n//       value: prevState.value + 1,\n//     }));\n//     this.countTotalFeedback();\n//     this.countPositiveFeedbackPercentage();\n//   };\n//   neutralFeedback = () => {\n//     this.setState(prevState => ({\n//       neutral: prevState.neutral + 1,\n//       value: prevState.value + 0.01,\n//     }));\n//     this.countTotalFeedback();\n//     this.countPositiveFeedbackPercentage();\n//   };\n//   badFeedback = () => {\n//     this.setState(prevState => ({\n//       bad: prevState.bad + 1,\n//       value: prevState.value + 0.001,\n//     }));\n//     this.countTotalFeedback();\n//     this.countPositiveFeedbackPercentage();\n//   };\n//   countTotalFeedback() {\n//     this.setState(prevState => ({\n//       total: prevState.total + 1,\n//     }));\n//   }\n//   countPositiveFeedbackPercentage() {\n//     this.setState(prevState => ({\n//       positivePercentage: Math.round((100 * prevState.value) / prevState.total),\n//     }));\n//   }\n//   options = {\n//     good: this.state.good,\n//     neutral: this.state.neutral,\n//     bad: this.state.bad,\n//   };\n//   onLeaveFeedback = {\n//     goodFeedback: this.goodFeedback,\n//     neutralFeedback: this.neutralFeedback,\n//     badFeedback: this.badFeedback,\n//   };\n//   render() {\n//     return (\n//       <>\n//         <Section title=\"Please leave feedback\" classname=\"Feedback\">\n//           <FeedbackOptions\n//             options={this.options}\n//             onLeaveFeedback={this.onLeaveFeedback}\n//           />\n//         </Section>\n//         <Section title=\"Statistics\" classname=\"Statistics\">\n//           <Statistics\n//             good={this.state.good}\n//             neutral={this.state.neutral}\n//             bad={this.state.bad}\n//             total={this.state.total}\n//             positivePercentage={this.state.positivePercentage}\n//           />\n//         </Section>\n//       </>\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Container: {\n    maxWidth: '1700px',\n    margin: '0 auto',\n    padding: '0 15px',\n    '& h1': {\n      display: 'block',\n      marginBottom: '15px',\n    },\n  },\n});\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n  return <div className={classes.Container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;\n","import PropTypes from 'prop-types';\nimport Container from '../Container';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","// Компоненты\nimport Feedback from './components/Feedback';\nimport Layout from './components/Layouts';\n\nfunction App() {\n  return (\n    <Layout>\n      <Feedback />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}